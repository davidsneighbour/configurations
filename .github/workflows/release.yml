name: publish npm packages

on:
  workflow_dispatch:

permissions:
  contents: write
  id-token: write  # for npm provenance if you use it

concurrency:
  group: publish-npm-${{ github.ref }}
  cancel-in-progress: false

jobs:
  deploy-npm-latest:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0   # full history helps lerna/versioning if needed
          persist-credentials: true
          token: ${{ secrets.GITHUB_TOKEN }}

      # Optional: simple actor allow-list (you can expand the list)
      - name: Ensure current actor is allowed
        if: ${{ !contains('["davidsneighbour"]', github.actor) }}
        run: |
          echo "Error: ${{ github.actor }} is not allowed to run this workflow."
          exit 1

      - name: Setup Node (with npm cache)
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: https://registry.npmjs.org/
          always-auth: true
          cache: npm
          cache-dependency-path: '**/package-lock.json'

      - name: Install dependencies
        run: npm ci

      # Example: build if your release expects built artifacts
      # - name: Build all packages
      #   run: npm run build:full

      - name: Release (version + publish + post-steps)
        env:
          NPM_CONFIG_PROVENANCE: true
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GIT_AUTHOR_NAME: ${{ github.actor }}
          GIT_AUTHOR_EMAIL: ${{ github.actor }}@users.noreply.github.com
          GIT_COMMITTER_NAME: ${{ github.actor }}
          GIT_COMMITTER_EMAIL: ${{ github.actor }}@users.noreply.github.com
        run: |
          set -euo pipefail
          npm whoami || { echo "npm auth failed"; exit 1; }
          # Single pipeline step (your script):
          npm run release
